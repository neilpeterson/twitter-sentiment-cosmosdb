resources:
- repo: self
phases:

- phase: Phase_1
  displayName: Build and Test (All)

  condition: succeeded()

  queue:
    name: Hosted Ubuntu 1604

  variables:
    python.version: '3.5, 3.6, 3.7'

  steps:

  - task: UsePythonVersion@0
    displayName: 'Use Python $(python.version)'
    inputs:
      versionSpec: '$(python.version)'

  - script: 'python -m pip install --upgrade pip && pip install -r requirements.txt'
    displayName: 'Install dependencies'

  - script: 'pip install pytest && py.test --junitxml=junit/test-results.xml'
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/test-results.xml'
    inputs:
      testResultsFiles: '**/test-results.xml'

      testRunTitle: 'Python $(python.version)'


  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: twitter-sentiment'
    inputs:
      PathtoPublish: chart

      ArtifactName: 'twitter-sentiment'



- phase: Phase_2
  displayName: Build and Push (Get Tweet)

  dependsOn: Phase_1
  condition: succeeded()
  queue:
    name: Hosted Ubuntu 1604
  steps:
  - script: |
       cd twitter-sentiment-apps/get-tweet/

       docker build -t nepetersacr.azurecr.io/get-tweet:$(Build.BuildId) .
    displayName: 'Docker Build (Get Tweet)'

  - task: AzureCLI@1
    displayName: 'AZ ACR Login'
    inputs:
      azureSubscription: 'Azure Connection'

      scriptLocation: inlineScript

      inlineScript: 'az acr login --name nepetersacr'


  - script: 'docker push nepetersacr.azurecr.io/get-tweet:$(Build.BuildId)'
    displayName: 'Docker Push (Get Tweet)'


- phase: Phase_3
  displayName: Build and Push (Process Tweet)

  dependsOn: Phase_1
  condition: succeeded()
  queue:
    name: Hosted Ubuntu 1604
  steps:
  - script: |
       cd twitter-sentiment-apps/process-tweet/

       docker build -t nepetersacr.azurecr.io/process-tweet:$(Build.BuildId) .
    displayName: 'Docker Build (Process Tweet)'

  - task: AzureCLI@1
    displayName: 'AZ ACR Login'
    inputs:
      azureSubscription: 'Azure Connection'

      scriptLocation: inlineScript

      inlineScript: 'az acr login --name nepetersacr'


  - script: 'docker push nepetersacr.azurecr.io/process-tweet:$(Build.BuildId)'
    displayName: 'Docker Push (Process Tweet)'


- phase: Phase_4
  displayName: Build and Push (Chart Tweet)

  dependsOn: Phase_1
  condition: succeeded()
  queue:
    name: Hosted Ubuntu 1604
  steps:
  - script: |
       cd twitter-sentiment-apps/get-tweet/

       docker build -t nepetersacr.azurecr.io/chart-tweet:$(Build.BuildId) .
    displayName: 'Docker Build (Chart Tweet)'

  - task: AzureCLI@1
    displayName: 'AZ ACR Login'
    inputs:
      azureSubscription: 'Azure Connection'

      scriptLocation: inlineScript

      inlineScript: 'az acr login --name nepetersacr'


  - script: 'docker push nepetersacr.azurecr.io/chart-tweet:$(Build.BuildId)'
    displayName: 'Docker Push (Chart Tweet)'


- phase: Phase_5
  displayName: Build and Push Chart

  dependsOn: Phase_1
  condition: succeeded()
  queue:
    name: Hosted Ubuntu 1604
  steps:
  - task: AzureCLI@1
    displayName: 'AZ ACR Login'
    inputs:
      azureSubscription: 'Azure Connection'

      scriptLocation: inlineScript

      inlineScript: 'az acr login --name nepetersacr'


  - task: HelmDeploy@0
    displayName: 'helm init --client-only'
    inputs:
      azureSubscription: 'Azure Connection'

      azureResourceGroup: 'aks-cluster-test'

      kubernetesCluster: 'aks-cluster-test'

      command: init

      arguments: '--client-only'


  - task: HelmDeploy@0
    displayName: 'helm package'
    inputs:
      command: package

      chartPath: 'chart/twitter-sentiment'

      arguments: '--version $(Build.BuildId)'


  - task: AzureCLI@1
    displayName: 'AZ ACR helm push'
    inputs:
      azureSubscription: 'Azure Connection'

      scriptLocation: inlineScript

      inlineScript: 'az acr helm push -n nepetersacr /home/vsts/work/1/a/twitter-sentiment-$(Build.BuildId).tgz'